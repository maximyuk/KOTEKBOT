
=========================================–ù–∞–ø–∏—Å–∞—Ç–∏ ==================================================
async def write_teach(message: types.Message, state: FSMContext):
    db = await Database.setup()
    teach = await db.teacher_name_exists_sql(message.text)
    if message.text == "–ù–∞–∑–∞–¥":
        await state.finish()
        await message.answer(
            "–ù–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥–º—ñ–Ω–µ–Ω–Ω–æ ‚úÖ", reply_markup=kb_client
        )
    else:
        if teach:
            async with state.proxy() as data:
                data["group"] = message.text
            await FSMWrite.message_teach.set()
            await message.answer(
                f"–ù–∞–ø–∏—à—ñ—Ç—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è üìù", reply_markup=types.ReplyKeyboardRemove()
            )
        elif not teach:
            await message.answer(
                f"–ù–µ–º–∞—î –≤–∏–∫–ª–∞–¥–∞—á–∞ {message.text} ‚ùå", reply_markup=kb_client
            )
            await state.finish()

async def write_teach_message(message: types.Message, state: FSMContext):
    db = await Database.setup()
    async with state.proxy() as data:
        group = data["group"]
        all_user = await db.all_teach_id_for_group_sql(group)
        group_user_writer = await db.group_for_teach_id(message.from_user.id)
        if bool(len(all_user)):
            for number in range(0, len(all_user)):
                try:
                    await bot.send_message(
                        all_user[number][0],
                        f"–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ {group_user_writer}\n" + message.text)
                except:
                    pass
            await message.answer("–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–∞–¥—ñ—Å–ª–∞–Ω–Ω–æ ‚úÖ", reply_markup=kb_client)
        elif bool(len(all_user)) == False:
            await message.answer(
                f"–ù–µ–º–∞—î –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ–≥–æ –≤–∏–∫–ª–∞–¥–∞—á–∞ –∑–∞ —Ü–∏–º —ñ–º'—è–º {group} ‚ùå", reply_markup=kb_client
            )
    await state.finish()


dp.register_message_handler(write_teach, state=FSMWrite.teach)
dp.register_message_handler(write_teach_message, state=FSMWrite.message_teach)


async def write(message: types.Message):
    db = await Database.setup()
    
    elif await db.teachers_exists_sql(message.from_user.id):
        await message.answer(
            "–©–æ–± –Ω–∞–ø–∏—Å–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —ñ–Ω—à—ñ–π –≥—Ä—É–ø—ñ\n—Å–ø–æ—á–∞—Ç–∫—É –≤–∏–±–µ—Ä—ñ—Ç—å —ó—ó —ñ–º'—è –Ω–∏–∂—á–µ ‚¨áÔ∏è",
            reply_markup = await get_t_kb(),
        )
        await FSMWrite.teach.set()

================================================================================================================



