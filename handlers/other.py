# import
import asyncio


# from import
from aiogram import types
from aiogram.dispatcher import Dispatcher
from aiogram.types import ReplyKeyboardRemove
from aiogram.dispatcher import FSMContext
from aiogram.utils.exceptions import (
    MessageToDeleteNotFound,
    MessageCantBeDeleted,
    BadRequest,
)
from aiogram.dispatcher.filters.state import State, StatesGroup
from keyboards import *
from data_base.controller_db import *
from random import randint as rd
from handlers.stats import stats_schedule_add, see_all_stats


passwords = str(rd(10, 20)) + str(rd(10, 20)) + str(rd(10, 20)) + str(rd(10, 20))


# answer - –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
# reply - –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥–ø–æ–≤—ñ–¥—å
# send_massage - –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ –ª—Å


# =========–ö–ª–∞—Å—Å –º–∞—à–∏–Ω–∏ —Å—Ç–∞–Ω—É=========
class FSMReg(StatesGroup):
    course_groupe_reg = State()
    teachers_reg = State()
    password_reg = State()
    reply_reg = State()
    specialtys = State()


#                            –°–¢–ê–†–¢
async def start(message: types.Message):
    if message.chat.type == "private":
        if await admin_exists_sql(message.from_user.id):
            await message.answer("–í–∏ –∞–¥–º—ñ–Ω", reply_markup=kb_start_admin)
        elif await user_exists_sql(message.from_user.id):
            await message.answer("‚¨áÔ∏è –ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ ‚¨áÔ∏è", reply_markup=kb_start_user)
        elif await teachers_exists_sql(message.from_user.id):
            await message.answer("‚¨áÔ∏è –ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ ‚¨áÔ∏è", reply_markup=kb_start_user)
        else:
            await message.answer("‚¨áÔ∏è –ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ ‚¨áÔ∏è", reply_markup=kb_start)
    else:
        try:
            msg = await message.answer(
                "‚ùóÔ∏è–¶—é –∫–æ–º–∞–Ω–¥—É –º–æ–∂–Ω–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ —Ç—ñ–ª—å–∫–∏ –≤ –æ—Å–æ–±–∏—Å—Ç–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è—Ö\n–ü–µ—Ä–µ–π–¥—ñ—Ç—å –¥–æ @pedbot_bot",
                reply_markup=ReplyKeyboardRemove(),
            )
            await asyncio.sleep(6)
            await message.delete()
            await msg.delete()
        except (MessageToDeleteNotFound, MessageCantBeDeleted, BadRequest):
            await message.answer(
                "–ü–æ–º–∏–ª–∫–∞, —è –Ω–µ –º–æ–∂—É –∞–≤—Ç–æ–≤–∏–¥–∞–ª–∏—Ç–∏ —Å–≤–æ—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, –º–µ–Ω—ñ –ø–æ—Ç—Ä—ñ–±–Ω—ñ –ø—Ä–∞–≤–∞ –∞–¥–º—ñ–Ω–∞"
            )


#                          –ü–æ–∫–∞–∑ –º–µ–Ω—é
async def menu(message: types.Message):
    if message.chat.type == "private":
        if await admin_exists_sql(message.from_user.id):
            await message.answer("‚¨áÔ∏è–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é‚¨áÔ∏è", reply_markup=kb_start_admin)
        elif await user_exists_sql(message.from_user.id):
            await message.answer("‚¨áÔ∏è–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é‚¨áÔ∏è", reply_markup=kb_start_user)
        elif await teachers_exists_sql(message.from_user.id):
            await message.answer("‚¨áÔ∏è–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é‚¨áÔ∏è", reply_markup=kb_start_user)
        else:
            await message.answer("‚¨áÔ∏è–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é‚¨áÔ∏è", reply_markup=kb_start)
    else:
        pass


#                          –ï–ª–µ–º–Ω—Ç–∏ –ú–µ–Ω—é
# ===========================–í—Å—Ç—É–ø üìó============================
async def introduction(message: types.Message):
    await stats_schedule_add("–í—Å—Ç—É–ø üìó", 1)
    await message.answer(
        "–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ <a href='https://telegra.ph/%D0%86nformac%D1%96ya-dlya-vstupnika-2023-02-21'>–≤—Å—Ç—É–ø</a> –Ω–∞ 2023 —Ä—ñ–∫\n–≤—Å–µ —Å–∫–æ–ø—ñ–π–æ–≤–∞–Ω–æ –∑ –æ—Ñ—ñ—Ü—ñ–π–Ω–æ–≥–æ\n—Å–∞–π—Ç—É.–£ 2023 —Ä–æ—Ü—ñ - –∞–∫—Ç—É–∞–ª—å–Ω–æ",
        parse_mode="HTML",
    )


# ===========================–ü—Ä–æ –∫–æ–ª–µ–¥–∂ üõ°============================
async def about_collasge(message: types.Message):
    await stats_schedule_add("–ü—Ä–æ –∫–æ–ª–µ–¥–∂ üõ°", 1)
    await message.answer(
        "<a href='https://telegra.ph/Pro-koledzh-02-21'>–ü—Ä–æ –∫–æ–ª–µ–¥–∂</a>",
        parse_mode="HTML",
    )


# ===========================–ß–∞—Å —Ä–æ–±–æ—Ç–∏ üìÖ============================
async def time_work(message: types.Message):
    await stats_schedule_add("–ß–∞—Å —Ä–æ–±–æ—Ç–∏ üìÖ", 1)
    await message.answer(
        """–ß–∞—Å —Ä–æ–±–æ—Ç–∏ ‚åöÔ∏è
–ü–æ–Ω–µ–¥—ñ–ª–æ–∫ - –ü'—è—Ç–Ω–∏—Ü—è: 8:00‚Äì17:00.
–°—É–±–æ—Ç–∞ - –ù–µ–¥—ñ–ª—è: –ó–∞—á–∏–Ω–µ–Ω–æ."""
    )


# ===========================–ê–¥—Ä–µ—Å–∞ üì´============================
async def addres(message: types.Message):
    await stats_schedule_add("–ê–¥—Ä–µ—Å–∞ üì´", 1)
    await message.answer(
        """‚Ä¢–ó–µ–º–ª—è üåç
‚Ä¢–£–∫—Ä–∞—ó–Ω–∞ üá∫üá¶
‚Ä¢–í–æ–ª–∏–Ω—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å üåâ
‚Ä¢–í–æ–ª–æ–¥–∏–º–∏—Ä üåÜ
‚Ä¢–í—É–ª. –£—Å—Ç–∏–ª—É–∑—å–∫–∞ 42 üõ£"""
    )


# ===========================–°–ø–µ—Ü—ñ–∞–ª—å–Ω–æ—Å—Ç—ñ üìú============================
async def specialty(message: types.Message):
    await stats_schedule_add("–°–ø–µ—Ü—ñ–∞–ª—å–Ω–æ—Å—Ç—ñ üìú", 1)
    if message.chat.type == "private":
        await message.answer("C–ø–µ—Ü—ñ–∞–ª—å–Ω–æ—Å—Ç—ñ üìú –í–í–ü–§–ö", reply_markup=kb_speciality)
        await FSMReg.specialtys.set()
    else:
        await message.answer("–¶—é –∫–æ–º–∞–Ω–¥—É –º–æ–∂–Ω–∞ –≤–∏–∫–æ—Ä–∏—Ç–æ–≤—É–≤–∞—Ç–∏ —Ç—ñ–ª—å–∫–∏ –≤ –ª—Å –±–æ—Ç")


async def specialty1(m: types.Message, state=FSMContext):
    if m.chat.type == "private":
        if m.text == "üîô –ù–∞–∑–∞–¥":
            if await admin_exists_sql(m.from_user.id):
                await m.answer("‚¨áÔ∏è–Ü–Ω—à–µ üìå‚¨áÔ∏è", reply_markup=kb_for_applicant)
            elif await user_exists_sql(m.from_user.id):
                await m.answer("‚¨áÔ∏è–Ü–Ω—à–µ üìå‚¨áÔ∏è", reply_markup=kb_for_applicant)
            elif await teachers_exists_sql(m.from_user.id):
                await m.answer("‚¨áÔ∏è–Ü–Ω—à–µ üìå‚¨áÔ∏è", reply_markup=kb_for_applicant)
            else:
                await m.answer("‚¨áÔ∏è–Ü–Ω—à–µ üìå‚¨áÔ∏è", reply_markup=kb_for_applicant)
            await state.finish()
        else:
            if m.text == "–î—ñ–ª–æ–≤–æ–¥—Å—Ç–≤–æ":
                await m.answer(
                    """–°–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ—Å—Ç—å 029 –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ–π–Ω–∞, –±—ñ–±–ª—ñ–æ—Ç–µ—á–Ω–∞ —Ç–∞ –∞—Ä—Ö—ñ–≤–Ω–∞ —Å–ø—Ä–∞–≤–∞ \n(<a href='https://telegra.ph/Spec%D1%96aln%D1%96st-029-%D0%86nformac%D1%96jna-b%D1%96bl%D1%96otechna-ta-arh%D1%96vna-sprava-D%D1%96lovodstvo-02-20-2'> –î—ñ–ª–æ–≤–æ–¥—Å—Ç–≤–æ </a>)""",
                    parse_mode="HTML",
                )
            elif m.text == "–î–æ—à–∫—ñ–ª—å–Ω–∞ –æ—Å–≤—ñ—Ç–∞":
                await m.answer(
                    """–°–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ—Å—Ç—å 012 \n(<a href='https://telegra.ph/SHvidkij-pereglyad-02-20'> –î–æ—à–∫—ñ–ª—å–Ω–∞ –æ—Å–≤—ñ—Ç–∞ </a>)""",
                    parse_mode="HTML",
                )
            elif m.text == "–ü–æ—á–∞—Ç–∫–æ–≤–∞ –æ—Å–≤—ñ—Ç–∞":
                await m.answer(
                    """–°–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ—Å—Ç—å 013 \n(<a href='https://telegra.ph/CHas-roboti-02-20'> –ü–æ—á–∞—Ç–∫–æ–≤–∞ –æ—Å–≤—ñ—Ç–∞ </a>)""",
                    parse_mode="HTML",
                )
            elif m.text == "–¢—Ä—É–¥–æ–≤–µ –Ω–∞–≤—á–∞–Ω–Ω—è":
                await m.answer(
                    """–°–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ—Å—Ç—å 014 –°–µ—Ä–µ–¥–Ω—è –æ—Å–≤—ñ—Ç–∞ \n(<a href='https://telegra.ph/Spec%D1%96aln%D1%96st-014-Serednya-osv%D1%96ta-Trudove-navchannya-ta-tehnolog%D1%96i-02-21'> –¢—Ä—É–¥–æ–≤–µ –Ω–∞–≤—á–∞–Ω–Ω—è —Ç–∞ —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó </a>)""",
                    parse_mode="HTML",
                )
            elif m.text == "–û–±—Ä–∞–∑–æ—Ç–≤–æ—Ä—á–µ üé®":
                await m.answer(
                    """–°–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ—Å—Ç—å 014.12 –°–µ—Ä–µ–¥–Ω—è –æ—Å–≤—ñ—Ç–∞ \n(<a href='https://telegra.ph/Spec%D1%96aln%D1%96st-01412-Serednya-osv%D1%96ta-Obrazotvorche-mistectvo-02-21'> –û–±—Ä–∞–∑–æ—Ç–≤–æ—Ä—á–µ –º–∏—Å—Ç–µ—Ü—Ç–≤–æ </a>)""",
                    parse_mode="HTML",
                )
            elif m.text == "–¶–∏—Ñ—Ä–æ–≤—ñ —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó":
                await m.answer(
                    """–°–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ—Å—Ç—å 015.39 –ü—Ä–æ—Ñ–µ—Å—ñ–π–Ω–∞ –æ—Å–≤—ñ—Ç–∞ \n(<a href='https://telegra.ph/Spec%D1%96aln%D1%96st-029-%D0%86nformac%D1%96jna-b%D1%96bl%D1%96otechna-ta-arh%D1%96vna-sprava-D%D1%96lovodstvo-02-20'> –¶–∏—Ñ—Ä–æ–≤—ñ —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó </a>)""",
                    parse_mode="HTML",
                )
    else:
        await m.answer("–¶—é –∫–æ–º–∞–Ω–¥—É –º–æ–∂–Ω–∞ –≤–∏–∫–æ—Ä–∏—Ç–æ–≤—É–≤–∞—Ç–∏ —Ç—ñ–ª—å–∫–∏ –≤ –ª—Å –±–æ—Ç–∞")
        await state.finish()


# ===========================–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è ‚öôÔ∏è============================
async def registration(message: types.Message):
    if message.text == "–†–æ–∑–∫–ª–∞–¥ ‚öôÔ∏è":
        await stats_schedule_add("–†–æ–∑–∫–ª–∞–¥ ‚öôÔ∏è", 1)
    if (
        (not await user_exists_sql(message.from_user.id))
        and (not await admin_exists_sql(message.from_user.id))
        and (not await teachers_exists_sql(message.from_user.id))
    ):
        if message.chat.type == "private":
            await message.answer(
                "ü§î –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è ü§î\n–í–∏–±–µ—Ä—ñ—Ç—å —Ç–∏–ø –∞–∫–∞—É–Ω—Ç—É ‚¨áÔ∏è", reply_markup=kb_choice
            )
            await FSMReg.reply_reg.set()
        else:
            try:
                msg = await message.answer(
                    "ü§® –ü–µ—Ä–µ–π–¥—ñ—Ç—å –≤ –æ—Å–æ–±–∏—Å—Ç—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–æ @pedbot_bot\n—ñ –∑–∞—Ä–µ—î—Å—Ç—Ä—É–π—Ç–µ—Å—å –∑–∞ –∫–æ–º–∞–Ω–¥–æ—é /start"
                )
                await asyncio.sleep(2)
                await message.delete()
                await msg.delete()
            except (MessageToDeleteNotFound, MessageCantBeDeleted, BadRequest):
                await message.answer(
                    "–ü–æ–º–∏–ª–∫–∞, —è –Ω–µ –º–æ–∂—É –∞–≤—Ç–æ–≤–∏–¥–∞–ª–∏—Ç–∏ —Å–≤–æ—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, –º–µ–Ω—ñ –ø–æ—Ç—Ä—ñ–±–Ω—ñ –ø—Ä–∞–≤–∞ –∞–¥–º—ñ–Ω–∞"
                )
    elif await user_exists_sql(message.from_user.id):
        if message.chat.type == "private":
            await message.answer("–í–∞—à–∞ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ ‚å®Ô∏è", reply_markup=kb_client)
        else:
            try:
                msg = await message.answer("‚ö†Ô∏è –í–∏ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–Ω—ñ")
                await asyncio.sleep(2)
                await message.delete()
                await msg.delete()
            except (MessageToDeleteNotFound, MessageCantBeDeleted, BadRequest):
                await message.answer(
                    "–ü–æ–º–∏–ª–∫–∞, —è –Ω–µ –º–æ–∂—É –∞–≤—Ç–æ–≤–∏–¥–∞–ª–∏—Ç–∏ —Å–≤–æ—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, –º–µ–Ω—ñ –ø–æ—Ç—Ä—ñ–±–Ω—ñ –ø—Ä–∞–≤–∞ –∞–¥–º—ñ–Ω–∞"
                )
    elif await teachers_exists_sql(message.from_user.id):
        if message.chat.type == "private":
            await message.answer("–í–∞—à–∞ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ ‚å®Ô∏è", reply_markup=kb_teachers)
        else:
            try:
                msg = await message.answer("‚ö†Ô∏è –í–∏ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–Ω—ñ")
                await asyncio.sleep(2)
                await message.delete()
                await msg.delete()
            except (MessageToDeleteNotFound, MessageCantBeDeleted, BadRequest):
                await message.answer(
                    "–ü–æ–º–∏–ª–∫–∞, —è –Ω–µ –º–æ–∂—É –∞–≤—Ç–æ–≤–∏–¥–∞–ª–∏—Ç–∏ —Å–≤–æ—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, –º–µ–Ω—ñ –ø–æ—Ç—Ä—ñ–±–Ω—ñ –ø—Ä–∞–≤–∞ –∞–¥–º—ñ–Ω–∞"
                )
    elif await admin_exists_sql(message.from_user.id):
        if message.chat.type == "private":
            await message.answer(
                "ü§î –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è ü§î\n–í–∏–±–µ—Ä—ñ—Ç—å —Ç–∏–ø –∞–∫–∞—É–Ω—Ç—É ‚¨áÔ∏è", reply_markup=kb_choice
            )
            await FSMReg.reply_reg.set()
        else:
            try:
                msg = await message.answer(
                    "ü§® –ü–µ—Ä–µ–π–¥—ñ—Ç—å –≤ –æ—Å–æ–±–∏—Å—Ç—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–æ @pedbot_bot\n—ñ –∑–∞—Ä–µ—î—Å—Ç—Ä—É–π—Ç–µ—Å—å –∑–∞ –∫–æ–º–∞–Ω–¥–æ—é /start"
                )
                await asyncio.sleep(2)
                await message.delete()
                await msg.delete()
            except (MessageToDeleteNotFound, MessageCantBeDeleted, BadRequest):
                await message.answer(
                    "–ü–æ–º–∏–ª–∫–∞, —è –Ω–µ –º–æ–∂—É –∞–≤—Ç–æ–≤–∏–¥–∞–ª–∏—Ç–∏ —Å–≤–æ—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, –º–µ–Ω—ñ –ø–æ—Ç—Ä—ñ–±–Ω—ñ –ø—Ä–∞–≤–∞ –∞–¥–º—ñ–Ω–∞"
                )


async def reg(message: types.Message, state: FSMContext):
    if message.text == "–ù–∞–∑–∞–¥":
        await state.finish()
        if await admin_exists_sql(message.from_user.id):
            await message.answer("‚¨áÔ∏è–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é‚¨áÔ∏è", reply_markup=kb_start_admin)
        elif await user_exists_sql(message.from_user.id):
            await message.answer("‚¨áÔ∏è–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é‚¨áÔ∏è", reply_markup=kb_start_user)
        elif await teachers_exists_sql(message.from_user.id):
            await message.answer("‚¨áÔ∏è–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é‚¨áÔ∏è", reply_markup=kb_start_user)
        else:
            await message.answer("‚¨áÔ∏è–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é‚¨áÔ∏è", reply_markup=kb_start)
    elif message.text == "–ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä üîê":
        await FSMReg.password_reg.set()
        await message.answer("üîí –í–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–æ–ª—å üîë", reply_markup=ReplyKeyboardRemove())
    elif message.text == "–°—Ç—É–¥–µ–Ω—Ç üë©‚Äçüéì":
        await FSMReg.course_groupe_reg.set()
        await message.answer(
            "‚¨áÔ∏è –í–≤–µ–¥—ñ—Ç—å –∫—É—Ä—Å —ñ –≥—Ä—É–ø—É –∑ –Ω–∞–≤–µ–¥–µ–Ω–∏—Ö –Ω–∏–∂—á–µ", reply_markup=await get_kb()
        )
    elif message.text == "–í–∏–∫–ª–∞–¥–∞—á üë®‚Äçüè´":
        await FSMReg.teachers_reg.set()
        await message.answer(
            "‚¨áÔ∏è –í–≤–µ–¥—ñ—Ç—å —ñ–Ω—ñ—Ü—ñ–∞–ª–∏ –∑ –Ω–∞–≤–µ–¥–µ–Ω–∏—Ö –Ω–∏–∂—á–µ", reply_markup=await get_t_kb()
        )
    else:
        await message.answer("‚òπÔ∏è –ù–µ–º–∞—î —Ç–∞–∫–æ—ó –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ ‚òπÔ∏è", reply_markup=kb_start)
        await state.finish()


async def regAdmin(message: types.Message, state: FSMContext):
    if message.text == "–ù–∞–∑–∞–¥":
        await state.finish()
        if await admin_exists_sql(message.from_user.id):
            await message.answer("‚¨áÔ∏è–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é‚¨áÔ∏è", reply_markup=kb_start_admin)
        elif await user_exists_sql(message.from_user.id):
            await message.answer("‚¨áÔ∏è–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é‚¨áÔ∏è", reply_markup=kb_start_user)
        elif await teachers_exists_sql(message.from_user.id):
            await message.answer("‚¨áÔ∏è–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é‚¨áÔ∏è", reply_markup=kb_start_user)
        else:
            await message.answer("‚¨áÔ∏è–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é‚¨áÔ∏è", reply_markup=kb_start)
    elif message.text == passwords:
        if await admin_exists_sql(message.from_user.id):
            await message.answer("–í–∏ –≤–∂–µ –∞–¥–º—ñ–Ω", reply_markup=kb_start_admin)
            await state.finish()
        else:
            first_name = message.from_user.first_name
            username = message.from_user.username
            await add_admin_sql(message.from_user.id, first_name, username)
            await message.answer("‚úÖ –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ ‚úÖ", reply_markup=kb_admin)
            await state.finish()
    else:
        await message.answer("‚òπÔ∏è –ø–∞—Ä–æ–ª—å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π ‚òπÔ∏è", reply_markup=kb_start)
        await state.finish()


async def regUser(message: types.Message, state: FSMContext):
    first_name = message.from_user.first_name
    username = message.from_user.username
    groupe = message.text
    if message.text == "–ù–∞–∑–∞–¥":
        await state.finish()
        if await admin_exists_sql(message.from_user.id):
            await message.answer("‚¨áÔ∏è–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é‚¨áÔ∏è", reply_markup=kb_start_admin)
        elif await user_exists_sql(message.from_user.id):
            await message.answer("‚¨áÔ∏è–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é‚¨áÔ∏è", reply_markup=kb_start_user)
        elif await teachers_exists_sql(message.from_user.id):
            await message.answer("‚¨áÔ∏è–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é‚¨áÔ∏è", reply_markup=kb_start_user)
        else:
            await message.answer("‚¨áÔ∏è–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é‚¨áÔ∏è", reply_markup=kb_start)
    elif await group_exists_sql(message.text):
        await add_user_sql(message.from_user.id, first_name, username, groupe)
        await state.finish()
        await message.answer("‚úÖ –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ ‚úÖ", reply_markup=kb_client)
    else:
        await message.answer(
            "‚òπÔ∏è –ù–µ–º–∞—î —Ç–∞–∫–æ—ó –≥—Ä—É–ø–∏, –∑–≤—è–∂—ñ—Ç—å—Å—è –∑ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º\n–¥–ª—è —Ç–æ–≥–æ —â–æ–± —ó—ó –¥–æ–¥–∞–ª–∏ \n–Ü –ø–æ–≤—Ç–æ—Ä—ñ—Ç—å —Å–ø—Ä–æ–±—É",
            reply_markup=kb_start,
        )
        await state.finish()


async def regTeachers(message: types.Message, state: FSMContext):
    first_name = message.from_user.first_name
    username = message.from_user.username
    teachers_name = message.text
    if message.text == "–ù–∞–∑–∞–¥":
        await state.finish()
        if await admin_exists_sql(message.from_user.id):
            await message.answer("‚¨áÔ∏è–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é‚¨áÔ∏è", reply_markup=kb_start_admin)
        elif await user_exists_sql(message.from_user.id):
            await message.answer("‚¨áÔ∏è–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é‚¨áÔ∏è", reply_markup=kb_start_user)
        elif await teachers_exists_sql(message.from_user.id):
            await message.answer("‚¨áÔ∏è–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é‚¨áÔ∏è", reply_markup=kb_start_user)
        else:
            await message.answer("‚¨áÔ∏è–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é‚¨áÔ∏è", reply_markup=kb_start)
    elif await teachers_name_exists_sql(message.text):
        await add_teachers_sql(
            message.from_user.id, first_name, username, teachers_name
        )
        await state.finish()
        await message.answer("‚úÖ –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ ‚úÖ", reply_markup=kb_teachers)
    else:
        await message.answer(
            "‚òπÔ∏è –ù–µ–º–∞—î —Ç–∞–∫–æ–≥–æ –≤—á–∏—Ç–µ–ª—è, –∑–≤—è–∂—ñ—Ç—å—Å—è –∑ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º\n–¥–ª—è —Ç–æ–≥–æ —â–æ–± –π–æ–≥–æ –¥–æ–¥–∞–ª–∏ \n–Ü –ø–æ–≤—Ç–æ—Ä—ñ—Ç—å —Å–ø—Ä–æ–±—É",
            reply_markup=kb_start,
        )
        await state.finish()


# ===========================–Ü–Ω—à–µ üìå============================
async def others(message: types.Message):
    await stats_schedule_add("–Ü–Ω—à–µ üìå", 1)
    await message.answer("–Ü–Ω—à–µ ü´§", reply_markup=kb_infs)


# ===========================–°—Ç—ñ–∫–µ—Ä–∏ üë®‚Äçüë©‚Äçüëß‚Äçüë¶============================
async def stick(message: types.Message):
    await stats_schedule_add("–°—Ç—ñ–∫–µ—Ä–∏ üë®‚Äçüë©‚Äçüëß‚Äçüë¶", 1)
    await message.answer_sticker(
        r"CAACAgIAAxkBAAEH15Nj9O7fae-x_g7MdX6tus4wAh8SngACLQAD3jyHIuJ7Rhz4aJKDLgQ"
    )


# ===========================–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –¥–ª—è –∞–±—ñ—Ç—É—Ä—ñ—î–Ω—Ç–∞============================
async def for_applicant(message: types.Message):
    await stats_schedule_add("–î–ª—è –∞–±—ñ—Ç—É—Ä—ñ—î–Ω—Ç–∞ üßë‚Äçüíª", 1)
    await message.answer("–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –¥–ª—è –∞–±—ñ—Ç—É—Ä—ñ—î–Ω—Ç–∞", reply_markup=kb_for_applicant)



#                             –ö–û–ú–ê–ù–î–ò

# @dp.message_handler(commands=["coupes"])
async def view_coupes_comm(message: types.Message):
    if await user_exists_sql(message.from_user.id):
        boolen, photo, date = await see_rod_sql(message.from_user.id)
        if boolen:
            try:
                await message.answer_photo(photo, date)
            except BadRequest:
                pass
        elif not boolen:
            try:
                msg = await message.answer("‚òπÔ∏è –†–æ–∑–∫–ª–∞–¥—É –¥–ª—è –≤–∞—à–æ—ó –≥—Ä—É–ø–∏ —â–µ –Ω–µ–º–∞—î... ‚òπÔ∏è")
                await asyncio.sleep(4)
                await message.delete()
                await msg.delete()
            except (MessageToDeleteNotFound, MessageCantBeDeleted, BadRequest):
                await message.answer(
                    "–ü–æ–º–∏–ª–∫–∞, —è –Ω–µ –º–æ–∂—É –∞–≤—Ç–æ–≤–∏–¥–∞–ª–∏—Ç–∏ —Å–≤–æ—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, –º–µ–Ω—ñ –ø–æ—Ç—Ä—ñ–±–Ω—ñ –ø—Ä–∞–≤–∞ –∞–¥–º—ñ–Ω–∞"
                )
    else:
        if message.chat.type == "private":
            await message.answer(
                "‚ùóÔ∏è–ó–∞—Ä–µ—î—Å—Ç—Ä—É–π—Ç–µ—Å—å‚ùóÔ∏è", reply_markup=ReplyKeyboardRemove()
            )
        else:
            try:
                msg = await message.answer(
                    "‚ùóÔ∏è–ü–µ—Ä–µ–π–¥—ñ—Ç—å –¥–æ @pedbot_bot —ñ –∑–∞—Ä–µ—î—Å—Ç—Ä—É–π—Ç–µ—Å—å",
                    reply_markup=ReplyKeyboardRemove(),
                )
                await asyncio.sleep(4)
                await message.delete()
                await msg.delete()
            except (MessageToDeleteNotFound, MessageCantBeDeleted, BadRequest):
                await message.answer(
                    "–ü–æ–º–∏–ª–∫–∞, —è –Ω–µ –º–æ–∂—É –∞–≤—Ç–æ–≤–∏–¥–∞–ª–∏—Ç–∏ —Å–≤–æ—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, –º–µ–Ω—ñ –ø–æ—Ç—Ä—ñ–±–Ω—ñ –ø—Ä–∞–≤–∞ –∞–¥–º—ñ–Ω–∞"
                )


# @dp.message_handler(commands=["delete_keyboards"])
async def delete_keyboard(message: types.Message):
    try:
        msg = await message.answer(
            "‚ôªÔ∏è–ö–ª–∞–≤—ñ–∞—Ç—É—Ä—É –≤–∏–¥–∞–ª–µ–Ω–æ‚ôªÔ∏è", reply_markup=ReplyKeyboardRemove()
        )
        await asyncio.sleep(4)
        await message.delete()
        await msg.delete()
    except (MessageToDeleteNotFound, MessageCantBeDeleted, BadRequest):
        await message.answer(
            "–ü–æ–º–∏–ª–∫–∞, —è –Ω–µ –º–æ–∂—É –∞–≤—Ç–æ–≤–∏–¥–∞–ª–∏—Ç–∏ —Å–≤–æ—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, –º–µ–Ω—ñ –ø–æ—Ç—Ä—ñ–±–Ω—ñ –ø—Ä–∞–≤–∞ –∞–¥–º—ñ–Ω–∞"
        )


# @dp.message_handler(commands=["version"])
async def versions(message: types.Message):
    try:
        version = (
            "–í–µ—Ä—Å—ñ—è –±–æ—Ç–∞ : release 1.5 \n–í–µ—Ä—Å—ñ—è Python : 3.11.1\n–í–µ—Ä—Å—ñ—è Aiogram : 2.24"
        )
        await message.answer(version)
    except (MessageToDeleteNotFound, MessageCantBeDeleted, BadRequest):
        await message.answer(
            "–ü–æ–º–∏–ª–∫–∞, —è –Ω–µ –º–æ–∂—É –∞–≤—Ç–æ–≤–∏–¥–∞–ª–∏—Ç–∏ —Å–≤–æ—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, –º–µ–Ω—ñ –ø–æ—Ç—Ä—ñ–±–Ω—ñ –ø—Ä–∞–≤–∞ –∞–¥–º—ñ–Ω–∞"
        )


# @dp.message_handler(commands=["info"])
async def donate(message: types.Message):
    await stats_schedule_add("–î–æ–Ω–∞—Ç ü´°", 1)
    version = "–ü—ñ–¥—Ç—Ä–∏–º–∞—Ç–∏ –ø—Ä–æ—î–∫—Ç –º–æ–∂–Ω–∞\n–∑–∞ –Ω–æ–º–µ—Ä–æ–º –∫–∞—Ä—Ç–∏ : 5375411202975004\n\
–∞–±–æ –∑–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º : <a href='https://send.monobank.ua/jar/5uzN1NcwYA'>monobank</a>"
    await message.answer(version,parse_mode="HTML",disable_web_page_preview=True)


# @dp.message_handler(commands=["help"])
async def help(message: types.Message):
    await stats_schedule_add("–ö–æ–º–∞–Ω–¥–∏ üõ†", 1)
    try:
        help = """‚ùóÔ∏è–ö–æ–º–∞–Ω–¥–∏ –∑ –ø—Ä–µ—Ñ—ñ–∫—Å–æ–º '/'
–∑—Ä—É—á–Ω–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –≤ –≥—Ä—É–ø–∞—Ö.

‚ùì–©–æ–± –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –±–æ—Ç–∞ –≤ –≥—Ä—É–ø–∞—Ö:
1.–î–æ–¥–∞–π—Ç–µ –π–æ–≥–æ —É —Å–≤–æ—é –≥—Ä—É–ø—É.
2.–î–∞–π—Ç–µ –ø—Ä–∞–≤–∞ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞.
3.–ù–∞–ø–∏—à—ñ—Ç—å / —ñ –±–æ—Ç –ø–æ–∫–∞–∂–µ –≤—Å—ñ –¥–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–º–∞–Ω–¥–∏.
"""
        await message.answer(help)
    except (MessageToDeleteNotFound, MessageCantBeDeleted, BadRequest):
        pass


async def about_bot(message: types.Message):
    await stats_schedule_add("–ü—Ä–æ –±–æ—Ç–∞ üñá", 1)
    await message.answer(
"""–ë–û–¢ –í–ü–ö –ü–ï–î–ö–Ü–¢
–í–µ—Ä—Å—ñ—è : release 1.5
–†–æ–∑—Ä–æ–±–Ω–∏–∫: <a href='https://t.me/salkooua'>–ú—É—Å–∞—î–≤ –î–∂–∞–º—ñ–ª—å</a>
–ó—Ä–æ–±–∏–≤ –∞–≤–∞—Ç–∞—Ä–∫—É: <a href='https://t.me/yurchh'>–ö–æ–Ω–æ–≤–∞–ª–µ—Ü—å –Æ—Ä–∞</a>

–ë–æ—Ç —Å—Ç–≤–æ—Ä–µ–Ω–æ –¥–ª—è —Å–ø—Ä–æ—â–µ–Ω–Ω—è
–≤–∏–∫–æ–Ω–∞–Ω–Ω—è –±—É–¥—å - —è–∫–∏—Ö —Ä–µ—á–µ–π
–∑–≤'—è–∑–∞–Ω–∏—Ö –∑ –∫–æ–ª–µ–¥–∂–µ–º
–£ –Ω—å–æ–º—É —î –∫—É–ø–∞ –ø–æ—Ç—Ä—ñ–±–Ω–∏—Ö
—ñ –Ω–µ –¥—É–∂–µ —Ñ—É–Ω–∫—Ü—ñ–π, —è–∫—ñ
—Ä–æ–∑—Å—Ç–∞–≤–ª–µ–Ω–Ω—ñ –≤ –∑—Ä—É—á–Ω–∏—Ö –º—ñ—Å—Ü—è—Ö

<a href='https://vvpc.com.ua/'>–û—Ñ—ñ—Ü—ñ–π–Ω–∏–π —Å–∞–π—Ç –í–ü–§–ö</a>
""",parse_mode="HTML",disable_web_page_preview=True)


async def stats_all(message: types.Message):
    boolean, text = await see_all_stats()
    check, value_stud = await count_user_sql()
    check, value_teach = await count_teacher_sql()
    await message.answer(
f"""üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ :
 ‚Ä¢ –ö—ñ–ª—å–∫—ñ—Å—Ç—å —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤ —É –±–æ—Ç—ñ : {value_stud}
 ‚Ä¢ –ö—ñ–ª—å–∫—ñ—Å—Ç—å –≤–∏–∫–ª–∞–¥–∞—á—ñ–≤ —É –±–æ—Ç—ñ : {value_teach}

üßÆ–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ –∑–∞ –º—ñ—Å—è—Ü—å :
{text}
(–ù–∞—Ç–∏—Å–∫–∞–Ω–Ω—è —Ü–∏—Ö –∫–Ω–æ–ø–æ–∫)
""")


# ===========================—Ä–µ—î—Å—Ç—Ä–∞—Ç–æ—Ä============================
def register_handler_other(dp: Dispatcher):
    dp.register_message_handler(start, commands=["start"])
    dp.register_message_handler(menu, text="–ú–µ–Ω—é üë•")
    dp.register_message_handler(about_bot, text="–ü—Ä–æ –±–æ—Ç–∞ üñá")
    dp.register_message_handler(about_collasge, text="–ü—Ä–æ –∫–æ–ª–µ–¥–∂ üõ°")
    dp.register_message_handler(introduction, text="–í—Å—Ç—É–ø üìó")
    dp.register_message_handler(time_work, text="–ß–∞—Å —Ä–æ–±–æ—Ç–∏ üìÖ")
    dp.register_message_handler(addres, text="–ê–¥—Ä–µ—Å–∞ üì´")
    dp.register_message_handler(others, text="–Ü–Ω—à–µ üìå")
    dp.register_message_handler(stick, text="–°—Ç—ñ–∫–µ—Ä–∏ üë®‚Äçüë©‚Äçüëß‚Äçüë¶")
    dp.register_message_handler(for_applicant, text="–î–ª—è –∞–±—ñ—Ç—É—Ä—ñ—î–Ω—Ç–∞ üßë‚Äçüíª")
    dp.register_message_handler(stats_all, text="–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ üßÆ")
    dp.register_message_handler(stats_all, commands=["stats"])

    dp.register_message_handler(specialty, text="–°–ø–µ—Ü—ñ–∞–ª—å–Ω–æ—Å—Ç—ñ üìú", state=None)
    dp.register_message_handler(specialty1, state=FSMReg.specialtys)
    # –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è
    dp.register_message_handler(
        registration, text=["–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è ‚öôÔ∏è", "–†–æ–∑–∫–ª–∞–¥ ‚öôÔ∏è"], state=None
    )
    dp.register_message_handler(reg, state=FSMReg.reply_reg)
    dp.register_message_handler(regAdmin, state=FSMReg.password_reg)
    dp.register_message_handler(regUser, state=FSMReg.course_groupe_reg)
    dp.register_message_handler(regTeachers, state=FSMReg.teachers_reg)
    # –ö–æ–º–∞–Ω–¥–∏
    dp.register_message_handler(help, text="–ö–æ–º–∞–Ω–¥–∏ üõ†")
    dp.register_message_handler(help, commands=["help"])
    # –ü—ñ–¥—Ç—Ä–∏–º–∫–∞
    dp.register_message_handler(donate, text="–î–æ–Ω–∞—Ç ü´°")
    dp.register_message_handler(donate, commands=["donate"])
    # –†–æ–∑–∫–ª–∞–¥
    dp.register_message_handler(view_coupes_comm, commands=["coupes"])
    # –í–∏–¥–∞–ª–µ–Ω–Ω—è –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏
    dp.register_message_handler(delete_keyboard, commands=["delete_keyboards"])
    # –í–µ—Ä—Å—ñ—è
    dp.register_message_handler(versions, commands=["version"])
