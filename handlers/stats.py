from keyboards import *
from aiogram import types, Router
from data_base import Database

from aiogram.filters import Text

router = Router()


text = {
    "stats_all": ["–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ üßÆ", "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", "Stats", "stat", "S"],
}


# ===========================–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ üßÆ============================
@router.message(Text(text=text["stats_all"], ignore_case=True))
async def stats_all(message: types.Message):
    db = await Database.setup()
    value_user = await db.count_user_sql()
    value_student = await db.count_student_sql()
    value_teacher = await db.count_teacher_sql()
    await message.answer(
        f"""üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ :</b>
 ‚Ä¢ –ó–∞–≥–∞–ª—å–Ω–∞ –∫-—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ : {value_user}

 ‚Ä¢ –ö—ñ–ª—å–∫—ñ—Å—Ç—å —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤ —É –±–æ—Ç—ñ : {value_student}
 ‚Ä¢ –ö—ñ–ª—å–∫—ñ—Å—Ç—å –≤–∏–∫–ª–∞–¥–∞—á—ñ–≤ —É –±–æ—Ç—ñ : {value_teacher}
""",
        reply_markup=await update_kb(),
        parse_mode="HTML",
    )


@router.callback_query(Text("update"))
async def stats_all_query(query: types.CallbackQuery):
    db = await Database.setup()
    value_user = await db.count_user_sql()
    value_student = await db.count_student_sql()
    value_teacher = await db.count_teacher_sql()
    try:
        await query.message.edit_text(
            f"""üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ :</b>
 ‚Ä¢ –ó–∞–≥–∞–ª—å–Ω–∞ –∫-—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ : {value_user}

 ‚Ä¢ –ö—ñ–ª—å–∫—ñ—Å—Ç—å —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤ —É –±–æ—Ç—ñ : {value_student}
 ‚Ä¢ –ö—ñ–ª—å–∫—ñ—Å—Ç—å –≤–∏–∫–ª–∞–¥–∞—á—ñ–≤ —É –±–æ—Ç—ñ : {value_teacher}
""",
            reply_markup=await update_kb(),
            parse_mode="HTML",
        )
    except:
        await query.answer(
            "–ù–∞ –∂–∞–ª—å, —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–µ –∑–º—ñ–Ω–∏–ª–∞—Å—è.\n–ß–æ–º—É –± –Ω–µ –∑–∞–ø—Ä–æ–ø–æ–Ω—É–≤–∞—Ç–∏\n–±–æ—Ç–∞ —Å–≤–æ—ó–º –æ–¥–Ω–æ–≥—Ä—É–ø–Ω–∏–∫–∞–º? üòã",
            show_alert=True,
        )
