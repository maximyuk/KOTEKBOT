# import
import asyncio

# from import
from aiogram import types
from aiogram.dispatcher import Dispatcher
from aiogram.utils.exceptions import MessageIsTooLong
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from keyboards import *
from data_base.controller_db import *
from config import super_admin_admin, super_admin_ura
from create_bot import bot
from handlers.other import passwords


class FSMSuperA(StatesGroup):
    group = State()


# ===========================–°–ø–∏—Å–æ–∫ –≥—Ä—É–ø============================
# –ö–ª–∞–≤—ñ–∞—É—Ä–∞ –∞–¥–º—ñ–Ω–∞
async def admin_kb(msg: types.Message):
    if (
        await admin_exists_sql(msg.from_user.id)
        or msg.from_user.id == super_admin_admin
        or msg.from_user.id == super_admin_ura
    ):
        await msg.answer("–ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –∞–¥–º—ñ–Ω–∞", reply_markup=kb_admin)


# –ö–ª–∞–≤—ñ–∞—É—Ä–∞ –≤–ª–∞—Å–Ω–∏–∫–∞
async def super_admin_kb(msg: types.Message):
    if msg.from_user.id == super_admin_admin or msg.from_user.id == super_admin_ura:
        await msg.answer("–ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –≤–ª–∞—Å–Ω–∏–∫–∞", reply_markup=sadmin)


# –ö–ª–∞–≤—ñ–∞—É—Ä–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
async def user_kb(msg: types.Message):
    if (
        await user_exists_sql(msg.from_user.id)
        or msg.from_user.id == super_admin_admin
        or msg.from_user.id == super_admin_ura
    ):
        await msg.answer("–ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ —é–∑–µ—Ä–∞", reply_markup=kb_client)


# –ü–æ–∫–∞–∑–∞—Ç–∏ —Ç–∞–±–ª–∏—Ü—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
async def super_admin_user(msg: types.Message):
    if msg.from_user.id == super_admin_admin or msg.from_user.id == super_admin_ura:
        try:
            booled = await user_all_sql()
            if booled:
                await msg.answer("–ù–µ–º–∞—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤")
            elif not booled:
                spisok = list_all_user.get()
                await msg.answer(spisok)
        except MessageIsTooLong:
            for x in range(0, len(spisok), 4096):
                await bot.send_message(msg.chat.id, spisok[x : x + 4096])
    else:
        dels = await msg.answer("–£ —Ç–µ–±–µ –Ω–µ–º–∞—î –ø—Ä–∞–≤, –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É –±–∞–∑–∏ –¥–∞–Ω–Ω–∏—Ö")
        await asyncio.sleep(4)
        await msg.delete()
        await dels.delete()


# –ü–æ–∫–∞–∑–∞—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑–∞ –≥—Ä—É–ø–æ—é
async def super_admin_user_for_group(msg: types.Message, state: FSMContext):
    if msg.from_user.id == super_admin_admin or msg.from_user.id == super_admin_ura:
        await msg.answer(
            "–í–≤–µ–¥—ñ—Ç—å –≥—Ä—É–ø—É –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É —Ç–∞–±–ª–∏—Ü—ñ –∑–∞ —Ü—ñ—î—é –≥—Ä—É–ø–æ—é", reply_markup=await get_kb()
        )
        await FSMSuperA.group.set()
    else:
        dels = await msg.answer("–£ —Ç–µ–±–µ –Ω–µ–º–∞—î –ø—Ä–∞–≤, –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É –±–∞–∑–∏ –¥–∞–Ω–Ω–∏—Ö")
        await asyncio.sleep(4)
        await msg.delete()
        await dels.delete()


async def super_admin_user_for_group1(msg: types.Message, state: FSMContext):
    if msg.from_user.id == super_admin_admin or msg.from_user.id == super_admin_ura:
        if await group_exists_sql(msg.text):
            try:
                booled = await user_for_group_sql(msg.text)
                if booled:
                    await msg.answer("–ù–µ–º–∞—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤", reply_markup=sadmin)
                    await state.finish()
                elif not booled:
                    spisok = list_all_user_for_group.get()
                    await msg.answer(spisok)
                    await msg.answer("Done!", reply_markup=sadmin)
                    await state.finish()
            except MessageIsTooLong:
                for x in range(0, len(spisok), 4096):
                    await bot.send_message(msg.chat.id, spisok[x : x + 4096])
                    await msg.answer("Done!", reply_markup=sadmin)
                    await state.finish()
        else:
            await state.finish()
            dels = await msg.answer(
                "‚òπÔ∏è –ù–µ–º–∞—î —Ç–∞–∫–æ—ó –≥—Ä—É–ø–∏, –∑–≤—è–∂—ñ—Ç—å—Å—è –∑ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º", reply_markup=sadmin
            )
            await asyncio.sleep(4)
            await msg.delete()
            await dels.delete()
    else:
        dels = await msg.answer("–£ —Ç–µ–±–µ –Ω–µ–º–∞—î –ø—Ä–∞–≤, –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É –±–∞–∑–∏ –¥–∞–Ω–Ω–∏—Ö")
        await asyncio.sleep(4)
        await msg.delete()
        await dels.delete()


# ====================================


# –ü–æ–∫–∞–∑–∞—Ç–∏ —Ç–∞–±–ª–∏—Ü—é –≥—Ä—É–ø
async def super_admin_groupa(msg: types.Message):
    if msg.from_user.id == super_admin_admin or msg.from_user.id == super_admin_ura:
        try:
            booled = await groupa_all_sql()
            if booled:
                await msg.answer("–ù–µ–º–∞—î –≥—Ä—É–ø")
            elif not booled:
                spisok = list_all_groupa.get()
                await msg.answer(spisok)
        except MessageIsTooLong:
            for x in range(0, len(spisok), 4096):
                await bot.send_message(msg.chat.id, spisok[x : x + 4096])
    else:
        dels = await msg.answer("–£ —Ç–µ–±–µ –Ω–µ–º–∞—î –ø—Ä–∞–≤, –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É –±–∞–∑–∏ –¥–∞–Ω–Ω–∏—Ö")
        await asyncio.sleep(4)
        await msg.delete()
        await dels.delete()


# –ü–æ–∫–∞–∑–∞—Ç–∏ —Ç–∞–±–ª–∏—Ü—é –∞–¥–º—ñ–Ω—ñ–≤
async def super_admin_admins(msg: types.Message):
    if msg.from_user.id == super_admin_admin or msg.from_user.id == super_admin_ura:
        booled = await admin_all_sql()
        if booled:
            await msg.answer("–ù–µ–º–∞—î –∞–¥–º—ñ–Ω—ñ–≤")
        elif not booled:
            spisok = list_all_admin.get()
            await msg.answer(spisok)
    else:
        dels = await msg.answer("–£ —Ç–µ–±–µ –Ω–µ–º–∞—î –ø—Ä–∞–≤, –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É –±–∞–∑–∏ –¥–∞–Ω–Ω–∏—Ö")
        await asyncio.sleep(4)
        await msg.delete()
        await dels.delete()


async def password(msg: types.Message):
    if msg.from_user.id == super_admin_admin or msg.from_user.id == super_admin_ura:
        await msg.answer(f"PASSWORD : {passwords}")
    else:
        dels = await msg.answer("–£ —Ç–µ–±–µ –Ω–µ–º–∞—î –ø—Ä–∞–≤, –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É –±–∞–∑–∏ –¥–∞–Ω–Ω–∏—Ö")
        await asyncio.sleep(4)
        await msg.delete()
        await dels.delete()


# ===========================—Ä–µ—î—Å—Ç—Ä–∞—Ç–æ—Ä============================
def register_handler_sadmin(dp: Dispatcher):
    dp.register_message_handler(password, text="p")
    dp.register_message_handler(admin_kb, text="–ê–¥–º—ñ–Ω üîë")
    dp.register_message_handler(super_admin_kb, text="–≤–ª–∞—Å–Ω–∏–∫")
    dp.register_message_handler(user_kb, text="—Å—Ç—É–¥–µ–Ω—Ç")
    dp.register_message_handler(super_admin_user, text="—Ç–∞–±–ª–∏—Ü—è —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤")
    dp.register_message_handler(super_admin_user_for_group, text="—Ç–∞–±–ª–∏—Ü—è –∑–∞ –≥—Ä—É–ø–æ—é", state=None)
    dp.register_message_handler(super_admin_user_for_group1, state=FSMSuperA.group)
    dp.register_message_handler(super_admin_groupa, text="—Ç–∞–±–ª–∏—Ü—è –≥—Ä—É–ø–∏")
    dp.register_message_handler(super_admin_admins, text="—Ç–∞–±–ª–∏—Ü—è –∞–¥–º—ñ–Ω—ñ–≤")
