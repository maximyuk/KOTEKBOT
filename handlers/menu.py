# from import
from aiogram import types
from aiogram.dispatcher import Dispatcher
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from keyboards import *
from data_base import Database
from handlers.stats import stats_schedule_add
from aiogram.dispatcher.filters import ChatTypeFilter, Text
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup


# =========–ö–ª–∞—Å—Å –º–∞—à–∏–Ω–∏ —Å—Ç–∞–Ω—É=========
class FSMSpecialty(StatesGroup):
    specialty = State()


# ===========================–ú–µ–Ω—é üë•============================
async def menu(message: types.Message):
    db = await Database.setup()
    if await db.admin_exists_sql(message.from_user.id):
        await message.answer("‚¨áÔ∏è–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é‚¨áÔ∏è", reply_markup=kb_start_admin)
    elif await db.user_exists_sql(message.from_user.id):
        await message.answer("‚¨áÔ∏è–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é‚¨áÔ∏è", reply_markup=kb_start_user)
    elif await db.teachers_exists_sql(message.from_user.id):
        await message.answer("‚¨áÔ∏è–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é‚¨áÔ∏è", reply_markup=kb_start_user)
    else:
        await message.answer("‚¨áÔ∏è–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é‚¨áÔ∏è", reply_markup=kb_start)


#                          –ï–ª–µ–º–Ω—Ç–∏ –ú–µ–Ω—é


# ===========================–í—Å—Ç—É–ø üìó============================
async def introduction(message: types.Message):
    await stats_schedule_add("–í—Å—Ç—É–ø üìó", 1)
    await message.answer(
        "–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ <a href='https://telegra.ph/%D0%86nformac%D1%96ya-dlya-vstupnika-2023-02-21'>–≤—Å—Ç—É–ø</a> –Ω–∞ 2023 —Ä—ñ–∫\n–≤—Å–µ —Å–∫–æ–ø—ñ–π–æ–≤–∞–Ω–æ –∑ –æ—Ñ—ñ—Ü—ñ–π–Ω–æ–≥–æ\n—Å–∞–π—Ç—É.–£ 2023 —Ä–æ—Ü—ñ - –∞–∫—Ç—É–∞–ª—å–Ω–æ",
        parse_mode="HTML",
    )


# ===========================–ü—Ä–æ –∫–æ–ª–µ–¥–∂ üõ°============================
async def about_collasge(message: types.Message):
    await stats_schedule_add("–ü—Ä–æ –∫–æ–ª–µ–¥–∂ üõ°", 1)
    await message.answer(
        "<a href='https://telegra.ph/Pro-koledzh-02-21'>–ü—Ä–æ –∫–æ–ª–µ–¥–∂</a>",
        parse_mode="HTML",
    )


# ===========================–ß–∞—Å —Ä–æ–±–æ—Ç–∏ üìÖ============================
async def time_work(message: types.Message):
    await stats_schedule_add("–ß–∞—Å —Ä–æ–±–æ—Ç–∏ üìÖ", 1)
    await message.answer(
        """–ß–∞—Å —Ä–æ–±–æ—Ç–∏ ‚åöÔ∏è
–ü–æ–Ω–µ–¥—ñ–ª–æ–∫ - –ü'—è—Ç–Ω–∏—Ü—è: 8:00‚Äì17:00.
–°—É–±–æ—Ç–∞ - –ù–µ–¥—ñ–ª—è: –ó–∞—á–∏–Ω–µ–Ω–æ."""
    )


# ===========================–ê–¥—Ä–µ—Å–∞ üì´============================
async def addres(message: types.Message):
    await stats_schedule_add("–ê–¥—Ä–µ—Å–∞ üì´", 1)
    await message.answer(
        """‚Ä¢–ó–µ–º–ª—è üåç
‚Ä¢–£–∫—Ä–∞—ó–Ω–∞ üá∫üá¶
‚Ä¢–í–æ–ª–∏–Ω—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å üåâ
‚Ä¢–í–æ–ª–æ–¥–∏–º–∏—Ä 44700 üåÜ
‚Ä¢–í—É–ª. –£—Å—Ç–∏–ª—É–∑—å–∫–∞ 42 üõ£"""
    )


# ===========================–ö–æ–Ω—Ç–∞–∫—Ç–∏ ============================
async def contact(message: types.Message):
    await stats_schedule_add("–ê–¥—Ä–µ—Å–∞ üì´", 1)
    await message.answer("""
üì± –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ñ —Ç–µ–ª–µ—Ñ–æ–Ω–∏: 
(03342)35555 (—Ñ–∞–∫—Å), 
20950 (–ø—Ä–∏–π–º–∞–ª—å–Ω–∞ –∫–æ–º—ñ—Å—ñ—è),
üì® –ü–æ—á—Ç–∞ :
E-mail: post@vvpc.com.ua,
"""
)


# ===========================–°–ø–µ—Ü—ñ–∞–ª—å–Ω–æ—Å—Ç—ñ üìú============================
async def specialty(message: types.Message):
    await stats_schedule_add("–°–ø–µ—Ü—ñ–∞–ª—å–Ω–æ—Å—Ç—ñ üìú", 1)
    if message.chat.type == "private":
        await message.answer("C–ø–µ—Ü—ñ–∞–ª—å–Ω–æ—Å—Ç—ñ üìú –í–í–ü–§–ö", reply_markup=kb_speciality)
        await FSMSpecialty.specialty.set()
    else:
        await message.answer("–¶—é –∫–æ–º–∞–Ω–¥—É –º–æ–∂–Ω–∞ –≤–∏–∫–æ—Ä–∏—Ç–æ–≤—É–≤–∞—Ç–∏ —Ç—ñ–ª—å–∫–∏ –≤ –ª—Å –±–æ—Ç")


async def specialty1(m: types.Message, state=FSMContext):
    db = await Database.setup()
    if m.chat.type == "private":
        if m.text == "üîô –ù–∞–∑–∞–¥":
            if await db.admin_exists_sql(m.from_user.id):
                await m.answer("‚¨áÔ∏è–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é‚¨áÔ∏è", reply_markup=kb_for_applicant)
            elif await db.user_exists_sql(m.from_user.id):
                await m.answer("‚¨áÔ∏è–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é‚¨áÔ∏è", reply_markup=kb_for_applicant)
            elif await db.teachers_exists_sql(m.from_user.id):
                await m.answer("‚¨áÔ∏è–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é‚¨áÔ∏è", reply_markup=kb_for_applicant)
            else:
                await m.answer("‚¨áÔ∏è–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é‚¨áÔ∏è", reply_markup=kb_for_applicant)
            await state.finish()
        else:
            if m.text == "–î—ñ–ª–æ–≤–æ–¥—Å—Ç–≤–æ":
                await m.answer(
                    """–°–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ—Å—Ç—å 029 –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ–π–Ω–∞, –±—ñ–±–ª—ñ–æ—Ç–µ—á–Ω–∞ —Ç–∞ –∞—Ä—Ö—ñ–≤–Ω–∞ —Å–ø—Ä–∞–≤–∞ \n(<a href='https://telegra.ph/Spec%D1%96aln%D1%96st-029-%D0%86nformac%D1%96jna-b%D1%96bl%D1%96otechna-ta-arh%D1%96vna-sprava-D%D1%96lovodstvo-02-20-2'> –î—ñ–ª–æ–≤–æ–¥—Å—Ç–≤–æ </a>)""",
                    parse_mode="HTML",
                )
            elif m.text == "–î–æ—à–∫—ñ–ª—å–Ω–∞ –æ—Å–≤—ñ—Ç–∞":
                await m.answer(
                    """–°–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ—Å—Ç—å 012 \n(<a href='https://telegra.ph/SHvidkij-pereglyad-02-20'> –î–æ—à–∫—ñ–ª—å–Ω–∞ –æ—Å–≤—ñ—Ç–∞ </a>)""",
                    parse_mode="HTML",
                )
            elif m.text == "–ü–æ—á–∞—Ç–∫–æ–≤–∞ –æ—Å–≤—ñ—Ç–∞":
                await m.answer(
                    """–°–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ—Å—Ç—å 013 \n(<a href='https://telegra.ph/CHas-roboti-02-20'> –ü–æ—á–∞—Ç–∫–æ–≤–∞ –æ—Å–≤—ñ—Ç–∞ </a>)""",
                    parse_mode="HTML",
                )
            elif m.text == "–¢—Ä—É–¥–æ–≤–µ –Ω–∞–≤—á–∞–Ω–Ω—è":
                await m.answer(
                    """–°–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ—Å—Ç—å 014 –°–µ—Ä–µ–¥–Ω—è –æ—Å–≤—ñ—Ç–∞ \n(<a href='https://telegra.ph/Spec%D1%96aln%D1%96st-014-Serednya-osv%D1%96ta-Trudove-navchannya-ta-tehnolog%D1%96i-02-21'> –¢—Ä—É–¥–æ–≤–µ –Ω–∞–≤—á–∞–Ω–Ω—è —Ç–∞ —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó </a>)""",
                    parse_mode="HTML",
                )
            elif m.text == "–û–±—Ä–∞–∑–æ—Ç–≤–æ—Ä—á–µ üé®":
                await m.answer(
                    """–°–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ—Å—Ç—å 014.12 –°–µ—Ä–µ–¥–Ω—è –æ—Å–≤—ñ—Ç–∞ \n(<a href='https://telegra.ph/Spec%D1%96aln%D1%96st-01412-Serednya-osv%D1%96ta-Obrazotvorche-mistectvo-02-21'> –û–±—Ä–∞–∑–æ—Ç–≤–æ—Ä—á–µ –º–∏—Å—Ç–µ—Ü—Ç–≤–æ </a>)""",
                    parse_mode="HTML",
                )
            elif m.text == "–¶–∏—Ñ—Ä–æ–≤—ñ —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó":
                await m.answer(
                    """–°–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ—Å—Ç—å 015.39 –ü—Ä–æ—Ñ–µ—Å—ñ–π–Ω–∞ –æ—Å–≤—ñ—Ç–∞ \n(<a href='https://telegra.ph/Spec%D1%96aln%D1%96st-029-%D0%86nformac%D1%96jna-b%D1%96bl%D1%96otechna-ta-arh%D1%96vna-sprava-D%D1%96lovodstvo-02-20'> –¶–∏—Ñ—Ä–æ–≤—ñ —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó </a>)""",
                    parse_mode="HTML",
                )
    else:
        await m.answer("–¶—é –∫–æ–º–∞–Ω–¥—É –º–æ–∂–Ω–∞ –≤–∏–∫–æ—Ä–∏—Ç–æ–≤—É–≤–∞—Ç–∏ —Ç—ñ–ª—å–∫–∏ –≤ –ª—Å –±–æ—Ç–∞")
        await state.finish()


# ===========================–Ü–Ω—à–µ üìå============================
async def others(message: types.Message):
    await stats_schedule_add("–Ü–Ω—à–µ üìå", 1)
    await message.answer("–Ü–Ω—à–µ ü´§", reply_markup=kb_infs)


# ===========================–°—Ç—ñ–∫–µ—Ä–∏ üë®‚Äçüë©‚Äçüëß‚Äçüë¶============================
async def stick(message: types.Message):
    await stats_schedule_add("–°—Ç—ñ–∫–µ—Ä–∏ üë®‚Äçüë©‚Äçüëß‚Äçüë¶", 1)
    await message.answer_sticker(
        r"CAACAgIAAxkBAAEH15Nj9O7fae-x_g7MdX6tus4wAh8SngACLQAD3jyHIuJ7Rhz4aJKDLgQ"
    )


# ===========================–ü—Ä–æ –±–æ—Ç–∞ üñá============================
async def about_bot(message: types.Message):
    await stats_schedule_add("–ü—Ä–æ –±–æ—Ç–∞ üñá", 1)
    await message.answer(
        """–ë–û–¢ –í–ü–ö –ü–ï–î–ö–Ü–¢
–í–µ—Ä—Å—ñ—è : release 1.8
–†–æ–∑—Ä–æ–±–Ω–∏–∫: <a href='https://t.me/salkooua'>–ú—É—Å–∞—î–≤ –î–∂–∞–º—ñ–ª—å</a>
–ó—Ä–æ–±–∏–≤ –∞–≤–∞—Ç–∞—Ä–∫—É: <a href='https://t.me/yurchh'>–ö–æ–Ω–æ–≤–∞–ª–µ—Ü—å –Æ—Ä–∞</a>

–ë–æ—Ç —Å—Ç–≤–æ—Ä–µ–Ω–æ –¥–ª—è —Å–ø—Ä–æ—â–µ–Ω–Ω—è
–≤–∏–∫–æ–Ω–∞–Ω–Ω—è –±—É–¥—å - —è–∫–∏—Ö —Ä–µ—á–µ–π
–∑–≤'—è–∑–∞–Ω–∏—Ö –∑ –∫–æ–ª–µ–¥–∂–µ–º
–£ –Ω—å–æ–º—É —î –∫—É–ø–∞ –ø–æ—Ç—Ä—ñ–±–Ω–∏—Ö
—ñ –Ω–µ –¥—É–∂–µ —Ñ—É–Ω–∫—Ü—ñ–π, —è–∫—ñ
—Ä–æ–∑—Å—Ç–∞–≤–ª–µ–Ω–Ω—ñ –≤ –∑—Ä—É—á–Ω–∏—Ö –º—ñ—Å—Ü—è—Ö

<a href='https://vvpc.com.ua/'>–û—Ñ—ñ—Ü—ñ–π–Ω–∏–π —Å–∞–π—Ç –í–ü–§–ö</a>
""",
        parse_mode="HTML",
        disable_web_page_preview=True,
    )


# ===========================–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –¥–ª—è –∞–±—ñ—Ç—É—Ä—ñ—î–Ω—Ç–∞============================
async def for_applicant(message: types.Message):
    await stats_schedule_add("–î–ª—è –∞–±—ñ—Ç—É—Ä—ñ—î–Ω—Ç–∞ üßë‚Äçüíª", 1)
    await message.answer("–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –¥–ª—è –∞–±—ñ—Ç—É—Ä—ñ—î–Ω—Ç–∞ üòµ‚Äçüí´", reply_markup=kb_for_applicant)

async def score(message: types.Message):
    button = InlineKeyboardButton("–ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –∞–∫—Ç—É–∞–ª—å–Ω—ñ—Å—Ç—å", url = 'https://vvpc.com.ua/node/980')
    kb = InlineKeyboardMarkup(row_width=1).add(button)
    await message.answer(
"""
‚ùóÔ∏è –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —á–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –∞–∫—Ç—É–∞–ª—å–Ω–∞ ‚ùóÔ∏è
–¶–µ –º–æ–∂–Ω–∞ –∑—Ä–æ–±–∏—Ç–∏ –∫–Ω–æ–ø–∫–æ—é –ø—ñ–¥ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è–º

<b>–†–µ–∫–≤—ñ–∑–∏—Ç–∏ –æ–ø–ª–∞—Ç–∏ –∑–∞ –Ω–∞–≤—á–∞–Ω–Ω—è (—Å—Ç–∞–Ω–æ–º –Ω–∞ 15.05.22)</b>
–ë–∞–Ω–∫ –ì–£–î–ö–°–£ –í–æ–ª–∏–Ω—Å—å–∫–æ—ó –æ–±–ª–∞—Å—Ç—ñ

–ö–æ–¥ –Ñ–î–†–ü–û–£ 02125941

–†–∞—Ö—É–Ω–æ–∫: <code>UA368201720314241003201023033</code>

–ü—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è –ø–ª–∞—Ç–µ–∂—É: –ø–ª–∞—Ç–∞ –∑–∞ –Ω–∞–≤—á–∞–Ω–Ω—è

–í–∫–∞–∑–∞—Ç–∏ –ø—Ä—ñ–∑–≤–∏—â–µ —Å—Ç—É–¥–µ–Ω—Ç–∞, –∫—É—Ä—Å —Ç–∞ –≥—Ä—É–ø—É

 
<b>–†–µ–∫–≤—ñ–∑–∏—Ç–∏ –æ–ø–ª–∞—Ç–∏ –∑–∞ –≥—É—Ä—Ç–æ–∂–∏—Ç–æ–∫ (—Å—Ç–∞–Ω–æ–º –Ω–∞ 15.05.22)</b>
–ë–∞–Ω–∫ –ì–£–î–ö–°–£ –í–æ–ª–∏–Ω—Å—å–∫–æ—ó –æ–±–ª–∞—Å—Ç—ñ

–ö–æ–¥ –Ñ–î–†–ü–û–£ 02125941

–†–∞—Ö—É–Ω–æ–∫: <code>UA378201720314211003202023033</code>

–ü—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è –ø–ª–∞—Ç–µ–∂—É: –ø–ª–∞—Ç–∞ –∑–∞ –≥—É—Ä—Ç–æ–∂–∏—Ç–æ–∫

–í–∫–∞–∑–∞—Ç–∏ –ø—Ä—ñ–∑–≤–∏—â–µ —Å—Ç—É–¥–µ–Ω—Ç–∞, –∫—É—Ä—Å —Ç–∞ –≥—Ä—É–ø—É
""", parse_mode="HTML",reply_markup=kb)

async def official_site(message: types.Message):
    link = InlineKeyboardButton("–ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Å–∞–π—Ç", url = 'https://vvpc.com.ua/')
    link_kb = InlineKeyboardMarkup(row_width=1).add(link)
    await message.answer("–û—Ñ—ñ—Ü—ñ–π–Ω–∏–π —Å–∞–π—Ç –í–ü–ö üì∞", reply_markup=link_kb)

text = {
    "menu": ["–ú–µ–Ω—é üë•", "–ú–µ–Ω—é", "Menu"],
    "about_bot": ["–ü—Ä–æ –±–æ—Ç–∞ üñá", "–ü—Ä–æ –±–æ—Ç–∞", "about bot"],
    "about_collasge": ["–ü—Ä–æ –∫–æ–ª–µ–¥–∂ üõ°", "–ü—Ä–æ –∫–æ–ª–µ–¥–∂", "about collasge"],
    "introduction": ["–í—Å—Ç—É–ø üìó", "–í—Å—Ç—É–ø", "introduction"],
    "time_work": ["–ß–∞—Å —Ä–æ–±–æ—Ç–∏ üìÖ", "–ß–∞—Å —Ä–æ–±–æ—Ç–∏", "time work"],
    "addres": ["–ê–¥—Ä–µ—Å–∞ üì´", "–ê–¥—Ä–µ—Å–∞", "addres"],
    "contact": ["–ö–æ–Ω—Ç–∞–∫—Ç–∏ üìò", "–ö–æ–Ω—Ç–∞–∫—Ç–∏", "contact"],
    "others": ["–Ü–Ω—à–µ üìå", "–Ü–Ω—à–µ ", "others", "other"],
    "stick": ["–°—Ç—ñ–∫–µ—Ä–∏ üë®‚Äçüë©‚Äçüëß‚Äçüë¶", "–°—Ç—ñ–∫–µ—Ä–∏", "Stickers"],
    "score": ["score", "–†–µ–∫–≤—ñ–∑–∏—Ç–∏ üí≥", "–†–µ–∫–≤—ñ–∑–∏—Ç–∏"],
    "official_site": ["official site", "–û—Ñ—ñ—Ü—ñ–π–Ω–∏–π —Å–∞–π—Ç üåé", "–û—Ñ—ñ—Ü—ñ–π–Ω–∏–π —Å–∞–π—Ç"]
}


def register_handler_menu(dp: Dispatcher):
    dp.register_message_handler(
        menu, Text(ignore_case=True, equals=text["menu"]), ChatTypeFilter("private")
    )

    dp.register_message_handler(
        about_bot, Text(ignore_case=True, equals=text["about_bot"])
    )

    dp.register_message_handler(
        about_collasge, Text(ignore_case=True, equals=text["about_collasge"])
    )

    dp.register_message_handler(
        introduction, Text(ignore_case=True, equals=text["introduction"])
    )

    dp.register_message_handler(
        time_work, Text(ignore_case=True, equals=text["time_work"])
    )

    dp.register_message_handler(
        score, Text(ignore_case=True, equals=text["score"])
    )

    dp.register_message_handler(
        official_site, Text(ignore_case=True, equals=text["official_site"])
    )


    dp.register_message_handler(addres, Text(ignore_case=True, equals=text["addres"]))

    dp.register_message_handler(contact, Text(ignore_case=True, equals=text["contact"]))

    dp.register_message_handler(others, Text(ignore_case=True, equals=text["others"]))

    dp.register_message_handler(stick, Text(ignore_case=True, equals=text["stick"]))

    dp.register_message_handler(
        for_applicant, ChatTypeFilter("private"), text="–î–ª—è –∞–±—ñ—Ç—É—Ä—ñ—î–Ω—Ç–∞ üßë‚Äçüíª"
    )

    dp.register_message_handler(
        specialty, ChatTypeFilter("private"), text="–°–ø–µ—Ü—ñ–∞–ª—å–Ω–æ—Å—Ç—ñ üìú", state=None
    )

    dp.register_message_handler(
        specialty1, ChatTypeFilter("private"), state=FSMSpecialty.specialty
    )
