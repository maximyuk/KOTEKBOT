# from import
from aiogram import F, Router, types
from aiogram.filters import Command, Text
from aiogram.fsm.context import FSMContext

from data_base import Database
from handlers.text_handlers import menu_text
from keyboards import *

router = Router()


# ===========================–ú–µ–Ω—é üë•============================
async def menu(message: types.Message):
    db = await Database.setup()
    if await db.admin_exists_sql(message.from_user.id):
        await message.answer("‚¨áÔ∏è–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é‚¨áÔ∏è", reply_markup=await start_admin_kb())
    elif await db.student_exists_sql(message.from_user.id):
        await message.answer("‚¨áÔ∏è–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é‚¨áÔ∏è", reply_markup=await start_user_kb())
    elif await db.teacher_exists_sql(message.from_user.id):
        await message.answer("‚¨áÔ∏è–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é‚¨áÔ∏è", reply_markup=await start_user_kb())
    else:
        await message.answer("‚¨áÔ∏è–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é‚¨áÔ∏è", reply_markup=await start_all_kb())


#                          –ï–ª–µ–º–Ω—Ç–∏ –ú–µ–Ω—é
@router.message(Text(text=menu_text["introduction"], ignore_case=True))
# ===========================–í—Å—Ç—É–ø üìó============================
async def introduction(message: types.Message):
    photo_path = "photo/introduction.jpg"
    file_path = types.FSInputFile(photo_path)
    await message.answer_photo(
        photo=file_path,
        caption="<code><b>–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –¥–ª—è –≤—Å—Ç—É–ø–Ω–∏–∫–∞ 2023</b></code>",
        parse_mode="HTML",
        reply_markup=await url_introduction_kb(),
    )


@router.message(Text(text=menu_text["about_collasge"], ignore_case=True))
# ===========================–ü—Ä–æ –∫–æ–ª–µ–¥–∂ üõ°============================
async def about_collasge(message: types.Message):
    photo_path = "photo/about_collage.jpg"
    file_path = types.FSInputFile(photo_path)
    await message.answer_photo(
        photo=file_path,
        caption="""<code><b>–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –í–æ–ª–æ–¥–∏–º–∏—Ä—Å—å–∫–∏–π\n–ø–µ–¥–∞–≥–æ–≥—ñ—á–Ω–∏–π —Ñ–∞—Ö–æ–≤–∏–π –∫–æ–ª–µ–¥–∂\n—ñ–º–µ–Ω—ñ –ê.–Æ. –ö—Ä–∏–º—Å—å–∫–æ–≥–æ\n–í–æ–ª–∏–Ω—Å—å–∫–æ—ó –æ–±–ª–∞—Å–Ω–æ—ó —Ä–∞–¥–∏</b></code>""",
        parse_mode="HTML",
        reply_markup=await url_about_college_kb(),
    )


@router.message(Text(text=menu_text["time_work"], ignore_case=True))
# ===========================–ß–∞—Å —Ä–æ–±–æ—Ç–∏ üìÖ============================
async def time_work(message: types.Message):
    await message.answer(
        """–ß–∞—Å —Ä–æ–±–æ—Ç–∏ ‚åöÔ∏è
–ü–æ–Ω–µ–¥—ñ–ª–æ–∫ - –ü'—è—Ç–Ω–∏—Ü—è: 8:00‚Äì17:00.
–°—É–±–æ—Ç–∞ - –ù–µ–¥—ñ–ª—è: –ó–∞—á–∏–Ω–µ–Ω–æ."""
    )


@router.message(Text(text=menu_text["addres"], ignore_case=True))
# ===========================–ê–¥—Ä–µ—Å–∞ üì´============================
async def addres(message: types.Message):
    await message.answer(
        """‚Ä¢–ó–µ–º–ª—è üåç
‚Ä¢–£–∫—Ä–∞—ó–Ω–∞ üá∫üá¶
‚Ä¢–í–æ–ª–∏–Ω—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å üåâ
‚Ä¢–í–æ–ª–æ–¥–∏–º–∏—Ä 44700 üåÜ
‚Ä¢–í—É–ª. –£—Å—Ç–∏–ª—É–∑—å–∫–∞ 42 üõ£"""
    )


@router.message(Text(text=menu_text["contact"], ignore_case=True))
# ===========================–ö–æ–Ω—Ç–∞–∫—Ç–∏ ============================
async def contact(message: types.Message):
    await message.answer(
        """
üì± –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ñ —Ç–µ–ª–µ—Ñ–æ–Ω–∏: 
    - (03342)35555 (—Ñ–∞–∫—Å), 
    - 20950 (–ø—Ä–∏–π–º–∞–ª—å–Ω–∞ –∫–æ–º—ñ—Å—ñ—è)

üì® –ü–æ—à—Ç–∞ :
    - E-mail: post@vvpc.com.ua
""",
        reply_markup=await url_contact_kb(),
    )


@router.message(Text(text="–°–ø–µ—Ü—ñ–∞–ª—å–Ω–æ—Å—Ç—ñ üìú", ignore_case=True))
# ===========================–°–ø–µ—Ü—ñ–∞–ª—å–Ω–æ—Å—Ç—ñ üìú============================
async def specialty(message: types.Message, state: FSMContext):
    await message.answer(
        "C–ø–µ—Ü—ñ–∞–ª—å–Ω–æ—Å—Ç—ñ üìú –í–í–ü–§–ö", reply_markup=await url_speciality_kb()
    )


@router.message(Text(text=menu_text["others"], ignore_case=True))
# ===========================–Ü–Ω—à–µ üìå============================
async def others(message: types.Message):
    await message.answer("–Ü–Ω—à–µ ü´§", reply_markup=await other_kb())


@router.message(Text(text=menu_text["stick"], ignore_case=True))
# ===========================–°—Ç—ñ–∫–µ—Ä–∏ üë®‚Äçüë©‚Äçüëß‚Äçüë¶============================
async def stick(message: types.Message):
    await message.answer_sticker(
        r"CAACAgIAAxkBAAEH15Nj9O7fae-x_g7MdX6tus4wAh8SngACLQAD3jyHIuJ7Rhz4aJKDLgQ"
    )


@router.message(Text(text=menu_text["about_bot"], ignore_case=True))
# ===========================–ü—Ä–æ –±–æ—Ç–∞ üñá============================
async def about_bot(message: types.Message):
    await message.answer(
        """ü§ñ –ë–û–¢ –í–ü–§–ö –ü–ï–î–ö–Ü–¢
üÜô –í–µ—Ä—Å—ñ—è : release 2.0
üë®‚Äçüíª –†–æ–∑—Ä–æ–±–Ω–∏–∫: <a href='https://t.me/salkooua'>Salo</a>
üé® –î–∏–∑–∞–π–Ω –∞–≤–∏: <a href='https://t.me/rchpsd'>–ö–æ–Ω–æ–≤–∞–ª–µ—Ü—å –Æ—Ä–∞</a>

üìÖ –ü–æ—á–∞—Ç–æ–∫ —Ä–æ–∑—Ä–æ–±–∫–∏ : –°—ñ—á–µ–Ω—å 2023-–≥–æ —Ä–æ–∫—É

–ë–æ—Ç —Å—Ç–≤–æ—Ä–µ–Ω–æ –¥–ª—è —Å–ø—Ä–æ—â–µ–Ω–Ω—è
–≤–∏–∫–æ–Ω–∞–Ω–Ω—è –±—É–¥—å-—è–∫–∏—Ö —Ä–µ—á–µ–π,
–∑–≤'—è–∑–∞–Ω–∏—Ö –∑ –∫–æ–ª–µ–¥–∂–µ–º. –£ –Ω—å–æ–º—É
—î –∫—É–ø–∞ –ø–æ—Ç—Ä—ñ–±–Ω–∏—Ö —ñ –Ω–µ –¥—É–∂–µ
—Ñ—É–Ω–∫—Ü—ñ–π, —è–∫—ñ —Ä–æ–∑—Å—Ç–∞–≤–ª–µ–Ω—ñ –≤
–∑—Ä—É—á–Ω–∏—Ö –º—ñ—Å—Ü—è—Ö. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ
–π–æ–≥–æ –¥–ª—è –µ–∫–æ–Ω–æ–º–ª–µ–Ω–Ω—è —á–∞—Å—É!

üåê <a href='https://vvpc.com.ua/'>–û—Ñ—ñ—Ü—ñ–π–Ω–∏–π —Å–∞–π—Ç –í–ü–§–ö</a>
""",
        parse_mode="HTML",
        disable_web_page_preview=True,
    )


async def check_user(user_id: int):
    db = await Database.setup()
    if await db.admin_exists_sql(user_id):
        admin = "‚úÖ"
    else:
        admin = "‚ùå"

    if await db.student_exists_sql(user_id):
        student = await db.group_for_student_id_sql(user_id)
    else:
        student = "‚ùå"

    if await db.teacher_exists_sql(user_id):
        teacher = await db.group_for_teacher_id_sql(user_id)
    else:
        teacher = "‚ùå"

    return admin, student, teacher


@router.message(Command("me"))
@router.message(Text(text=menu_text["about_me"], ignore_case=True))
# ===========================–ü—Ä–æ –±–æ—Ç–∞ üñá============================
async def about_bot(message: types.Message):
    db = await Database.setup()
    user_id = message.from_user.id

    if await db.user_exists_sql(user_id):
        data = await db.user_show_data_sql(user_id)
        data = data[0]
        data_group = await check_user(user_id)

        message_text = f"""
<b>üë§ –Ü–º'—è: <a href="{message.from_user.url}">{data[1]}</a> | {data[0]}</b>
<b>üìÖ –î–∞—Ç–∞ —Ä–µ—î—Å—Ç–∞—Ü—ñ—ó: {data[4]}</b>

<b>üìä –ö—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å: {data[5]}</b>

<b>üë®‚Äçüíº –ê–¥–º—ñ–Ω:</b> {data_group[0]}
<b>üë©‚Äçüéì –°—Ç—É–¥–µ–Ω—Ç:</b> {data_group[1]}
<b>üë®‚Äçüè´ –í–∏–∫–ª–∞–¥–∞—á:</b> {data_group[2]}

<b>‚åõÔ∏è –û—Å—Ç–∞–Ω–Ω—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è 
–±–æ—Ç—É: {data[6]}</b>
(—Ü–µ –Ω–µ –≤—Ä–∞—Ö–æ–≤—É—î—Ç—å—Å—è)
"""
        await message.answer(
            message_text, disable_web_page_preview=True, parse_mode="HTML"
        )


@router.message(Text(text="–î–ª—è –∞–±—ñ—Ç—É—Ä—ñ—î–Ω—Ç–∞ üßë‚Äçüíª", ignore_case=True))
# ===========================–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –¥–ª—è –∞–±—ñ—Ç—É—Ä—ñ—î–Ω—Ç–∞============================
async def for_applicant(message: types.Message):
    await message.answer(
        "–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –¥–ª—è –∞–±—ñ—Ç—É—Ä—ñ—î–Ω—Ç–∞ üòµ‚Äçüí´", reply_markup=await for_applicant_kb()
    )


@router.message(Text(text=menu_text["score"], ignore_case=True))
async def score(message: types.Message):
    await message.answer(
        """
‚ùóÔ∏è –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —á–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –∞–∫—Ç—É–∞–ª—å–Ω–∞ ‚ùóÔ∏è
–¶–µ –º–æ–∂–Ω–∞ –∑—Ä–æ–±–∏—Ç–∏ –∫–Ω–æ–ø–∫–æ—é –ø—ñ–¥ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è–º

<b>–†–µ–∫–≤—ñ–∑–∏—Ç–∏ –æ–ø–ª–∞—Ç–∏ –∑–∞ –Ω–∞–≤—á–∞–Ω–Ω—è (—Å—Ç–∞–Ω–æ–º –Ω–∞ 15.05.22)</b>
–ë–∞–Ω–∫ –ì–£–î–ö–°–£ –í–æ–ª–∏–Ω—Å—å–∫–æ—ó –æ–±–ª–∞—Å—Ç—ñ

–ö–æ–¥ –Ñ–î–†–ü–û–£ 02125941

–†–∞—Ö—É–Ω–æ–∫: <code>UA368201720314241003201023033</code>

–ü—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è –ø–ª–∞—Ç–µ–∂—É: –ø–ª–∞—Ç–∞ –∑–∞ –Ω–∞–≤—á–∞–Ω–Ω—è

–í–∫–∞–∑–∞—Ç–∏ –ø—Ä—ñ–∑–≤–∏—â–µ —Å—Ç—É–¥–µ–Ω—Ç–∞, –∫—É—Ä—Å —Ç–∞ –≥—Ä—É–ø—É

 
<b>–†–µ–∫–≤—ñ–∑–∏—Ç–∏ –æ–ø–ª–∞—Ç–∏ –∑–∞ –≥—É—Ä—Ç–æ–∂–∏—Ç–æ–∫ (—Å—Ç–∞–Ω–æ–º –Ω–∞ 15.05.22)</b>
–ë–∞–Ω–∫ –ì–£–î–ö–°–£ –í–æ–ª–∏–Ω—Å—å–∫–æ—ó –æ–±–ª–∞—Å—Ç—ñ

–ö–æ–¥ –Ñ–î–†–ü–û–£ 02125941

–†–∞—Ö—É–Ω–æ–∫: <code>UA378201720314211003202023033</code>

–ü—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è –ø–ª–∞—Ç–µ–∂—É: –ø–ª–∞—Ç–∞ –∑–∞ –≥—É—Ä—Ç–æ–∂–∏—Ç–æ–∫

–í–∫–∞–∑–∞—Ç–∏ –ø—Ä—ñ–∑–≤–∏—â–µ —Å—Ç—É–¥–µ–Ω—Ç–∞, –∫—É—Ä—Å —Ç–∞ –≥—Ä—É–ø—É
        """,
        parse_mode="HTML",
        reply_markup=await url_score_kb(),
    )


@router.message(Text(text=menu_text["official_site"], ignore_case=True))
async def official_site(message: types.Message):
    await message.answer(
        "–û—Ñ—ñ—Ü—ñ–π–Ω–∏–π —Å–∞–π—Ç –í–ü–ö üì∞", reply_markup=await url_official_site_kb()
    )
