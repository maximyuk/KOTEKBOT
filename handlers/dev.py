from keyboards import *
from aiogram import types
from create_bot import bot

from aiogram.dispatcher import Dispatcher, FSMContext

from aiogram.dispatcher.filters.state import State, StatesGroup


class FSMSDev(StatesGroup):
    text_error = State()
    text_response = State()
    text_request = State()


async def get_text(type: str, message: types.Message = None):
    # –û—Å–Ω–æ–≤–Ω–∏–π —Ç–µ–∫—Å—Ç
    main_text = f"""
–¶–µ –ø–∞–Ω–µ–ª—å —Ä–æ–∑—Ä–æ–±–∫–∏ –±–æ—Ç–∞ ü§ù

–£ –Ω—ñ–π –≤–∏ –º–æ–∂–µ—Ç–µ :
   ‚Ä¢ –ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –∑–∞–ø–∏—Ç –Ω–∞ —É—á–∞—Å—Ç—å
 —É —Ä–æ–∑—Ä–æ–±—Ü—ñ —Ü—å–æ–≥–æ –±–æ—Ç–∞.
   ‚Ä¢ –ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –≤—ñ–¥–≥—É–∫ –ø—Ä–æ –±–æ—Ç–∞
 –≤–∞—à—ñ –æ—Å–æ–±–∏—Å—Ç—ñ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó —ñ —Ç–ø.
   ‚Ä¢ –ù–∞–¥—ñ—Å–ª–∞—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ 
 –ø–æ–º–∏–ª–∫—É —Ç–∞ —ñ–Ω—à—ñ –ø—Ä–æ–±–ª–µ–º–∏.

–í—ñ–¥–≥—É–∫ —ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
–Ω–∞–¥—Å–∏–ª–∞—é—Ç—å—Å—è –∞–Ω–æ–Ω—ñ–º–Ω–æ @botadmincat    
    """

    # –¢–µ–∫—Å—Ç –¥–ª—è –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏
    error_text = f"""
–û–ø–∏—à—ñ—Ç—å –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É/–ø–æ–º–∏–ª–∫—É.

–¢–∞–∫–æ–∂ –≤–∏ –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç–∏ 
–≤ –æ—Å–æ–±–∏—Å—Ç—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
–¥–æ @botadmincat üôÉ   
    """
    
    # –¢–µ–∫—Å—Ç –¥–ª—è –∑–∞–ø–∏—Ç—É
    request_text = f"""
–í–∏ –º–æ–∂–µ—Ç–µ –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –∑–∞–ø–∏—Ç
–Ω–∞ —É—á–∞—Å—Ç—å —É —Ä–æ–∑—Ä–æ–±—Ü—ñ –±–æ—Ç–∞

–¥–ª—è —Ü—å–æ–≥–æ –≤–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ 
 ‚Ä¢ –ù–∞–≤—á–∞—Ç–∏—Å—å —É –í–ü–ö (–±—É–¥—å - —è–∫–∏–π –∫—É—Ä—Å)
 ‚Ä¢ –ú–∞—î –±—É—Ç–∏ @username
 ‚Ä¢ –ó–Ω–∞—Ç–∏ :
    –æ–±–æ–≤'—è–∑–∫–æ–≤–æ
    - python (—Ä—ñ–≤–Ω—è –¥–∂—É–Ω–∞)
    - aiogram v2.25
    - SQL –∑–∞–ø–∏—Ç–∏ (aiosqlite)
    - –ë—É—Ç–∏ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–∏–º(–æ—é)
    –Ω–∞ GitHub 
    - –¢—Ä–æ—à–∫–∏ –∑–Ω–∞—Ç–∏ git
    —ñ–Ω—à—ñ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∏
    –º–æ–∂–Ω–∞ –¥–æ–≤—á–∏—Ç–∏ –∑–≥–æ–¥–æ–º
 ‚Ä¢ –¢–∞–∫–æ–∂ –º–æ–∂–Ω–∞ –¥–æ–ø–æ–º–æ–≥—Ç–∏
 –∑ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è–º –ø–æ–º–∏–ª–æ–∫ —É
 —Ç–µ–∫—Å—Ç—ñ. –î–ª—è —Ü—å–æ–≥–æ –∑–Ω–∞—Ç–∏
 —Ç–µ —â–æ –≤–∏—â–µ –Ω–µ —Ç—Ä–µ–±–∞.
 ‚Ä¢ –ù–µ –±—É—Ç–∏ –º–∞–ª–æ—Ä–æ—Å–æ–º üòÉ

 –ü—ñ—Å–ª—è –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è "–ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ ü´°"
 –≤–∏ –ø–æ–≤–∏–Ω–Ω—ñ —Ç—Ä–æ—à–∫–∏ —Ä–æ–∑–∫–∞–∑–∞—Ç–∏ –ø—Ä–æ —Å–µ–±–µ.
    """
    # –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∑–∞–ø–∏—Ç—É –¥–ª—è –∞–¥–º—ñ–Ω–∞

    if type == 'main':
        return main_text
    elif type == 'error':
        return error_text
    elif type == 'request_t':
        return request_text
    elif type == "request_admin":
        request_text_for_admin = f"–∑–∞–ø–∏—Ç\n{message.from_user.first_name}\n@{message.from_user.username}\n{message.from_user.id}"
        return request_text_for_admin



# main message
async def join_development(message: types.Message):
    await message.answer(await get_text('main'),reply_markup=dev_inline_kb,)


async def join_development_query(query: types.CallbackQuery, state: FSMContext):
    await state.finish()
    await query.message.edit_text(await get_text('main'))
    await query.message.edit_reply_markup(reply_markup=dev_inline_kb)


# error
async def error(query: types.CallbackQuery, state: FSMContext):
    await query.message.edit_text(await get_text('error'))
    await query.message.edit_reply_markup(reply_markup=dev_back_inline_kb)
    await FSMSDev.text_error.set()
    async with state.proxy() as data:
        data["message_obj_error"] = query


async def error_text(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        message_q: types.CallbackQuery = data["message_obj_error"]
    await message_q.message.edit_text(await get_text('main'))
    await message_q.message.edit_reply_markup(reply_markup=dev_inline_kb)
    await bot.send_message(chat_id=-1001873448980, message_thread_id=3, text = f"–ü–æ–º–∏–ª–∫–∞ :\n{message.text}")
    await message.delete()
    await state.finish()


# response
async def response(query: types.CallbackQuery, state: FSMContext):
    await query.message.edit_text("–¢–µ–ø–µ—Ä –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç–∏ –≤—ñ–¥–≥—É–∫ ü§ù")
    await query.message.edit_reply_markup(reply_markup=dev_back_inline_kb)
    await FSMSDev.text_response.set()
    async with state.proxy() as data:
        data["message_obj_response"] = query


async def response_text(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        message_q: types.CallbackQuery = data["message_obj_response"]
    await message_q.message.edit_text(await get_text('main'))
    await message_q.message.edit_reply_markup(reply_markup=dev_inline_kb)
    await bot.send_message(chat_id=-1001873448980, message_thread_id=5, text = f"–í—ñ–¥–≥—É–∫ :\n{message.text}")
    await message.delete()
    await state.finish()


# –ó–ê–ü–ò–¢ –ù–ê –£–ß–ê–°–¢–¨
async def request(query: types.CallbackQuery):
    await query.message.edit_text(await get_text('request_t'))
    await query.message.edit_reply_markup(reply_markup=dev_request_inline_kb)


async def confirm_request(query: types.CallbackQuery, state: FSMContext):
    await query.message.edit_text("–¢–µ–ø–µ—Ä –Ω–∞–ø–∏—à—ñ—Ç—å —Ç—Ä—ñ—à–∫–∏ –ø—Ä–æ —Å–µ–±–µ ü•≥")
    await query.message.edit_reply_markup(reply_markup=dev_back_inline_kb)
    await FSMSDev.text_request.set()
    async with state.proxy() as data:
        data["message_id"] = query




async def send_request(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        query: types.CallbackQuery = data["message_id"]
    await bot.send_message(chat_id=-1001873448980, message_thread_id=8, text = f"{await get_text('request_admin', message)}\n{message.text}")
    await query.message.edit_text(await get_text('main'))
    await query.message.edit_reply_markup(reply_markup=dev_inline_kb)
    await message.delete()
    await state.finish()


# ===========================—Ä–µ—î—Å—Ç—Ä–∞—Ç–æ—Ä============================
def register_handler_dev(dp: Dispatcher):
    dp.register_message_handler(join_development, text="–†–æ–∑—Ä–æ–±–∫–∞ üß©")
    # —Ä–µ–∞–≥—É–≤–∞—Ç–∏ –≤ —Å—Ç–∞–Ω–∞—Ö
    dp.register_callback_query_handler(join_development_query, text="back_dev")
    dp.register_callback_query_handler(join_development_query, text="back_dev", state=FSMSDev.text_error)
    dp.register_callback_query_handler(join_development_query, text="back_dev", state=FSMSDev.text_response)
    dp.register_callback_query_handler(join_development_query, text="back_dev", state=FSMSDev.text_request)
    # –≤—Å—ñ callback
    dp.register_callback_query_handler(request, text="request")
    dp.register_callback_query_handler(confirm_request, text="okay", state=None)
    dp.register_callback_query_handler(error, text="error", state=None)
    dp.register_callback_query_handler(response, text="response", state=None)
    # –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É —ñ –≤—ñ–¥–≥—É–∫
    dp.register_message_handler(error_text, state=FSMSDev.text_error)
    dp.register_message_handler(response_text, state=FSMSDev.text_response)
    dp.register_message_handler(send_request, state=FSMSDev.text_request)
